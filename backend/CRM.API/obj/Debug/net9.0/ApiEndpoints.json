[
  {
    "ContainingType": "CRM.API.Controllers.AttachmentController",
    "Method": "GetAttachments",
    "RelativePath": "api/Attachment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.Models.EfCore.Attachment, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.AttachmentController",
    "Method": "PostAttachment",
    "RelativePath": "api/Attachment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.AttachmentCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.Attachment",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.AttachmentController",
    "Method": "GetAttachment",
    "RelativePath": "api/Attachment/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.Attachment",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.AttachmentController",
    "Method": "PutAttachment",
    "RelativePath": "api/Attachment/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.AttachmentCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.AttachmentController",
    "Method": "DeleteAttachment",
    "RelativePath": "api/Attachment/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.AuthController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Auth/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "forgotPassword",
        "Type": "CRM.API.DTO.ForgotPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "CRM.API.DTO.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/Auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "CRM.API.DTO.ResetPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.AuthController",
    "Method": "VerifyResetCode",
    "RelativePath": "api/Auth/verify-reset-code",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "CRM.API.DTO.VerifyResetCodeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.CommentController",
    "Method": "GetComments",
    "RelativePath": "api/Comment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.Models.EfCore.Comment, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.CommentController",
    "Method": "PostComment",
    "RelativePath": "api/Comment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.CommentCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.Comment",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.CommentController",
    "Method": "GetComment",
    "RelativePath": "api/Comment/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.Comment",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.CommentController",
    "Method": "PutComment",
    "RelativePath": "api/Comment/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.CommentCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.CommentController",
    "Method": "DeleteComment",
    "RelativePath": "api/Comment/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.CustomFieldController",
    "Method": "GetCustomFields",
    "RelativePath": "api/CustomField",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.CustomFieldResponseDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.CustomFieldController",
    "Method": "PostCustomField",
    "RelativePath": "api/CustomField",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.CustomFieldCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.CustomFieldResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.CustomFieldController",
    "Method": "GetCustomField",
    "RelativePath": "api/CustomField/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.CustomFieldResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.CustomFieldController",
    "Method": "PutCustomField",
    "RelativePath": "api/CustomField/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.CustomFieldCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.CustomFieldController",
    "Method": "DeleteCustomField",
    "RelativePath": "api/CustomField/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueController",
    "Method": "GetIssues",
    "RelativePath": "api/Issue",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.IssueResponseDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueController",
    "Method": "PostIssue",
    "RelativePath": "api/Issue",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.IssueCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.IssueResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueController",
    "Method": "GetIssue",
    "RelativePath": "api/Issue/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.IssueResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueController",
    "Method": "PutIssue",
    "RelativePath": "api/Issue/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedDto",
        "Type": "CRM.API.DTO.IssueCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueController",
    "Method": "DeleteIssue",
    "RelativePath": "api/Issue/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueHistoryController",
    "Method": "GetIssueHistories",
    "RelativePath": "api/IssueHistory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.Models.EfCore.IssueHistory, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueHistoryController",
    "Method": "PostIssueHistory",
    "RelativePath": "api/IssueHistory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.IssueHistoryCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueHistoryController",
    "Method": "GetIssueHistory",
    "RelativePath": "api/IssueHistory/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.IssueHistory",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueHistoryController",
    "Method": "PutIssueHistory",
    "RelativePath": "api/IssueHistory/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.IssueHistoryCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueHistoryController",
    "Method": "DeleteIssueHistory",
    "RelativePath": "api/IssueHistory/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueSprintController",
    "Method": "GetIssueSprints",
    "RelativePath": "api/IssueSprint",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.IssueSprintResponseDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueSprintController",
    "Method": "PostIssueSprint",
    "RelativePath": "api/IssueSprint",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.IssueSprintCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueSprintController",
    "Method": "GetIssueSprint",
    "RelativePath": "api/IssueSprint/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.IssueSprintResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueSprintController",
    "Method": "PutIssueSprint",
    "RelativePath": "api/IssueSprint/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.IssueSprintCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueSprintController",
    "Method": "DeleteIssueSprint",
    "RelativePath": "api/IssueSprint/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueStatusController",
    "Method": "GetIssueStatuses",
    "RelativePath": "api/IssueStatus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.IssueStatusResponseDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueStatusController",
    "Method": "PostIssueStatus",
    "RelativePath": "api/IssueStatus",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.IssueStatusCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.IssueStatus",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueStatusController",
    "Method": "GetIssueStatus",
    "RelativePath": "api/IssueStatus/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.IssueStatusResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueStatusController",
    "Method": "PutIssueStatus",
    "RelativePath": "api/IssueStatus/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.IssueStatusCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueStatusController",
    "Method": "DeleteIssueStatus",
    "RelativePath": "api/IssueStatus/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueTypeController",
    "Method": "GetIssueTypes",
    "RelativePath": "api/IssueType",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.Models.EfCore.IssueType, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueTypeController",
    "Method": "PostIssueType",
    "RelativePath": "api/IssueType",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.IssueTypeCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.IssueType",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueTypeController",
    "Method": "GetIssueType",
    "RelativePath": "api/IssueType/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.IssueType",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueTypeController",
    "Method": "PutIssueType",
    "RelativePath": "api/IssueType/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.IssueTypeCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueTypeController",
    "Method": "DeleteIssueType",
    "RelativePath": "api/IssueType/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueTypeController",
    "Method": "GetCustomFields",
    "RelativePath": "api/IssueType/{id}/custom-fields",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.IssueTypeCustomFieldDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.IssueTypeController",
    "Method": "UpdateCustomFields",
    "RelativePath": "api/IssueType/{id}/custom-fields",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.UpdateIssueTypeCustomFieldsDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.NotificationController",
    "Method": "GetNotifications",
    "RelativePath": "api/Notification",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.Models.EfCore.Notification, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.NotificationController",
    "Method": "PostNotification",
    "RelativePath": "api/Notification",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.NotificationCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.Notification",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.NotificationController",
    "Method": "GetNotification",
    "RelativePath": "api/Notification/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.Notification",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.NotificationController",
    "Method": "PutNotification",
    "RelativePath": "api/Notification/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.NotificationCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.NotificationController",
    "Method": "DeleteNotification",
    "RelativePath": "api/Notification/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.ProjectController",
    "Method": "GetProjects",
    "RelativePath": "api/Project",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.ProjectResponseDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.ProjectController",
    "Method": "PostProject",
    "RelativePath": "api/Project",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.ProjectCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.ProjectResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.ProjectController",
    "Method": "GetProject",
    "RelativePath": "api/Project/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.ProjectResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.ProjectController",
    "Method": "PutProject",
    "RelativePath": "api/Project/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.ProjectCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.ProjectController",
    "Method": "DeleteProject",
    "RelativePath": "api/Project/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.ProjectMemberController",
    "Method": "GetProjectMembers",
    "RelativePath": "api/ProjectMember",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.Models.EfCore.ProjectMember, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.ProjectMemberController",
    "Method": "PostProjectMember",
    "RelativePath": "api/ProjectMember",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.ProjectMemberCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.ProjectMember",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.ProjectMemberController",
    "Method": "GetProjectMember",
    "RelativePath": "api/ProjectMember/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.ProjectMember",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.ProjectMemberController",
    "Method": "PutProjectMember",
    "RelativePath": "api/ProjectMember/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.ProjectMemberCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.ProjectMemberController",
    "Method": "DeleteProjectMember",
    "RelativePath": "api/ProjectMember/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.RoleController",
    "Method": "GetRoles",
    "RelativePath": "api/Role",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.Models.EfCore.Role, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.RoleController",
    "Method": "PostRole",
    "RelativePath": "api/Role",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.RoleCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.Role",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.RoleController",
    "Method": "GetRole",
    "RelativePath": "api/Role/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.Models.EfCore.Role",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.RoleController",
    "Method": "PutRole",
    "RelativePath": "api/Role/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.RoleCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.RoleController",
    "Method": "DeleteRole",
    "RelativePath": "api/Role/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.SmtpConfigurationController",
    "Method": "GetSmtpConfigurations",
    "RelativePath": "api/SmtpConfiguration",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.SmtpConfigurationDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.SmtpConfigurationController",
    "Method": "CreateSmtpConfiguration",
    "RelativePath": "api/SmtpConfiguration",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.SmtpConfigurationCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.SmtpConfigurationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.SmtpConfigurationController",
    "Method": "GetSmtpConfiguration",
    "RelativePath": "api/SmtpConfiguration/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.SmtpConfigurationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.SmtpConfigurationController",
    "Method": "UpdateSmtpConfiguration",
    "RelativePath": "api/SmtpConfiguration/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.SmtpConfigurationUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.SmtpConfigurationController",
    "Method": "DeleteSmtpConfiguration",
    "RelativePath": "api/SmtpConfiguration/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.SprintController",
    "Method": "GetSprints",
    "RelativePath": "api/Sprint",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.SprintResponseDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.SprintController",
    "Method": "PostSprint",
    "RelativePath": "api/Sprint",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.SprintCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.SprintResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.SprintController",
    "Method": "GetSprint",
    "RelativePath": "api/Sprint/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.SprintResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.SprintController",
    "Method": "PutSprint",
    "RelativePath": "api/Sprint/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.SprintCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.SprintController",
    "Method": "DeleteSprint",
    "RelativePath": "api/Sprint/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.UserResponseDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.UserController",
    "Method": "PostUser",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.UserCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.UserResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.UserController",
    "Method": "GetUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.UserResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.UserController",
    "Method": "PutUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.UserCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.WorkflowController",
    "Method": "GetWorkflows",
    "RelativePath": "api/Workflow",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.WorkflowDetailDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.WorkflowController",
    "Method": "CreateWorkflow",
    "RelativePath": "api/Workflow",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.WorkflowCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.WorkflowFullDetailDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.WorkflowController",
    "Method": "GetWorkflow",
    "RelativePath": "api/Workflow/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CRM.API.DTO.WorkflowFullDetailDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.WorkflowController",
    "Method": "UpdateWorkflow",
    "RelativePath": "api/Workflow/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CRM.API.DTO.WorkflowCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.WorkflowController",
    "Method": "DeleteWorkflow",
    "RelativePath": "api/Workflow/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.WorkflowController",
    "Method": "GetWorkflowStatuses",
    "RelativePath": "api/Workflow/{id}/statuses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[CRM.API.DTO.WorkflowStatusDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.WorkflowController",
    "Method": "UpdateStatusOrder",
    "RelativePath": "api/Workflow/{id}/statuses/order",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "orderDto",
        "Type": "CRM.API.DTO.WorkflowStatusOrderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CRM.API.Controllers.WorkflowController",
    "Method": "GetWorkflowsByIssueType",
    "RelativePath": "api/Workflow/ByIssueType/{issueTypeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "issueTypeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CRM.API.DTO.WorkflowDetailDto, CRM.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CRM.API.Controllers.WorkflowController",
    "Method": "DeleteTransition",
    "RelativePath": "api/Workflow/DeleteTransition",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "workflowId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "fromStatusId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "toStatusId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  }
]